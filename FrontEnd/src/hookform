import React, { useContext } from "react";
import { useForm } from "react-hook-form";
import { Form, Button, Container, Row, Col } from "react-bootstrap";
import noteContext from "./Context/NoteContext";
import { useNavigate } from "react-router-dom";
import "../Crud/Common.css";

const UserAdd = () => {
  const context = useContext(noteContext);
  const { addNote } = context;
  const navigate = useNavigate();
  const { register, handleSubmit, errors } = useForm();

  const onSubmit = (data) => {
    addNote(
      data.firstName,
      data.lastName,
      data.email,
      data.mobileNo,
      data.username,
      data.password,
      data.gender,
      data.birthdate
    );

    navigate("/userlist");
  };

  const handleBack = () => {
    navigate("/userlist");
  };

  return (
    <>
      <h2>Add User</h2>
      <Container className="d-flex justify-content-center my-5">
        <Form onSubmit={handleSubmit(onSubmit)}>
          <Row>
            <Col md={6}>
              <Form.Group controlId="firstName" className="mb-4">
                <Form.Label>First Name</Form.Label>
                <Form.Control
                  type="text"
                  name="firstName"
                  ref={register({ required: true })}
                />
                {errors.firstName && <span>This field is required</span>}
              </Form.Group>

              <Form.Group controlId="email" className="mb-4">
                <Form.Label>Email</Form.Label>
                <Form.Control
                  type="email"
                  name="email"
                  ref={register({
                    required: true,
                    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
                  })}
                />
                {errors.email && errors.email.type === "required" && (
                  <span>This field is required</span>
                )}
                {errors.email && errors.email.type === "pattern" && (
                  <span>Invalid email address</span>
                )}
              </Form.Group>

              <Form.Group controlId="username" className="mb-4">
                <Form.Label>Username</Form.Label>
                <Form.Control
                  type="text"
                  name="username"
                  ref={register({ required: true })}
                />
                {errors.username && <span>This field is required</span>}
              </Form.Group>

              <Form.Group controlId="gender" className="mb-4">
                <Form.Label>Gender</Form.Label>
                <Form.Select
                  name="gender"
                  ref={register({ required: true })}
                >
                  <option value="">Select gender</option>
                  <option value="male">Male</option>
                  <option value="female">Female</option>
                </Form.Select>
                {errors.gender && <span>This field is required</span>}
              </Form.Group>
            </Col>

            <Col md={6}>
              <Form.Group controlId="lastName" className="mb-4">
                <Form.Label>Last Name</Form.Label>
                <Form.Control
                  type="text"
                  name="lastName"
                  ref={register({ required: true })}
                />
                {errors.lastName && <span>This field is required</span>}
              </Form.Group>

              <Form.Group controlId="mobileNo" className="mb-4">
                <Form.Label>Mobile No</Form.Label>
                <Form.Control
                  type="text"
                  name="mobileNo"
                  ref={register({ required: true })}
                />
                {errors.mobileNo && <span>This field is required</span>}
              </Form.Group>

              <Form.Group controlId="password" className="mb-4">
                <Form.Label>Password</Form.Label>
                <Form.Control
                  type="password"
                  name="password"
                  ref={register({ required: true })}
                />
                {errors.password && <span>This field is required</span>}
              </Form.Group>

              <Form.Group controlId="birthdate" className="mb-4">
                <Form.Label>Birth Date</Form.Label>
                <Form.Control
                  type="date"
                  name="birthdate"
                  ref={register({ required: true })}
                />
                {errors.birthdate && <span>This field is required</span>}
              </Form.Group>
            </Col>
          </Row>

          <Button variant="primary" type="submit">
            Submit
          </Button>
          <Button className="mx-3" variant="dark" onClick={handleBack}>
            Back&rarr;
          </Button>
        </Form>
      </Container>
    </>
  );
};

export default UserAdd;
